version: '2.2'

services:
  es_node1:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data_es_node1:/usr/share/elasticsearch/data
      - ./certs:$CERTS_DIR
      - ./es_node1.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
    security_opt:
      - seccomp:unconfined
    networks:
      - elastic
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
  kibana:
    image: docker.elastic.co/kibana/kibana:${VERSION}
    depends_on: {"es_node1": {"condition": "service_healthy"}}
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
    volumes:
      - ./certs:$CERTS_DIR
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elastic
    # healthcheck:
    #   test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

  metricbeat1:
    image: docker.elastic.co/beats/metricbeat:${VERSION}
    # https://github.com/docker/swarmkit/issues/1951
    depends_on: {"es_node1": {"condition": "service_healthy"}}
    user: root
    volumes:
      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - ./certs:$CERTS_DIR
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - data_metricbeat1:/usr/share/metricbeat/data
    environment:
      - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-es_node1}
      - KIBANA_HOST=${KIBANA_HOST:-kibana}
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=$CERTS_DIR/ca/ca.crt
    # disable strict permission checks
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    deploy:
      mode: global
    networks:
      - elastic
volumes:
  data_es_node1:
    driver: local
  data_metricbeat1:
    driver: local

networks:
  elastic:
    driver: bridge
